
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '980A4F0BE1286D79AF81864A31FBFCDE'
    
_lr_action_items = {'FALSE':([0,2,4,5,6,7,13,14,15,19,20,21,22,24,26,27,29,32,33,34,35,],[5,-24,-20,-23,-17,-19,-18,-22,5,-6,5,5,-12,-13,-11,-14,5,-15,5,-7,-19,]),'NIL':([0,2,4,5,6,7,13,14,15,19,20,21,22,24,26,27,29,32,33,34,35,],[2,-24,-20,-23,-17,-19,-18,-22,2,-6,2,2,-12,-13,-11,-14,2,-15,2,-7,-19,]),'QUOTE':([0,2,4,5,6,7,13,14,15,19,20,21,22,24,26,27,29,32,33,34,35,],[9,-24,-20,-23,-17,-19,-18,-22,9,-6,9,9,-12,-13,-11,-14,9,-15,9,-7,-19,]),'SIMB':([0,1,2,4,5,6,7,13,14,15,18,19,20,21,22,24,25,26,27,29,32,33,34,35,],[6,15,-24,-20,-23,-17,-19,-18,-22,6,29,-6,6,6,-12,-13,33,-11,-14,6,-15,6,-7,-19,]),'NUM':([0,2,4,5,6,7,13,14,15,19,20,21,22,24,26,27,29,32,33,34,35,],[7,-24,-20,-23,-17,-19,-18,-22,7,-6,7,7,-12,-13,-11,-14,7,-15,35,-7,-19,]),'LPAREN':([0,2,4,5,6,7,8,9,13,14,15,19,20,21,22,24,26,27,29,32,33,34,35,36,],[1,-24,-20,-23,-17,-19,18,20,-18,-22,25,-6,18,18,-12,-13,-11,-14,18,-15,18,-7,-19,-16,]),'TEXT':([0,2,4,5,6,7,13,14,15,19,20,21,22,24,26,27,29,32,33,34,35,],[4,-24,-20,-23,-17,-19,-18,-22,4,-6,4,4,-12,-13,-11,-14,4,-15,4,-7,-19,]),'RPAREN':([2,4,5,6,7,8,13,14,15,17,19,20,21,22,23,24,26,27,29,30,31,32,33,34,35,36,],[-24,-20,-23,-17,-19,16,-18,-22,-10,28,-6,-10,-10,-12,32,-13,-11,-9,-10,34,-8,-15,-10,-7,36,-16,]),'TRUE':([0,2,4,5,6,7,13,14,15,19,20,21,22,24,26,27,29,32,33,34,35,],[14,-24,-20,-23,-17,-19,-18,-22,14,-6,14,14,-12,-13,-11,-14,14,-15,14,-7,-19,]),'$end':([0,2,3,4,5,6,7,10,11,12,13,14,16,19,28,32,34,],[-21,-24,-2,-20,-23,-17,-19,0,-1,-3,-18,-22,-5,-6,-4,-15,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'call':([0,8,15,20,21,29,33,],[12,17,24,24,24,24,24,]),'quoted_list':([0,15,20,21,29,33,],[3,22,22,22,22,22,]),'items':([15,20,21,29,33,],[23,30,31,23,23,]),'list':([9,],[19,]),'item':([15,20,21,29,33,],[21,21,21,21,21,]),'let':([0,],[8,]),'exp':([0,],[10,]),'atom':([0,15,20,21,29,33,],[11,26,26,26,26,26,]),'bool':([0,15,20,21,29,33,],[13,13,13,13,13,13,]),'empty':([15,20,21,29,33,],[27,27,27,27,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> atom','exp',1,'p_exp_atom','yacc.py',128),
  ('exp -> quoted_list','exp',1,'p_exp_qlist','yacc.py',132),
  ('exp -> call','exp',1,'p_exp_call','yacc.py',136),
  ('exp -> let call RPAREN','exp',3,'p_exp_let_ass','yacc.py',140),
  ('exp -> let RPAREN','exp',2,'p_exp_let','yacc.py',145),
  ('quoted_list -> QUOTE list','quoted_list',2,'p_quoted_list','yacc.py',150),
  ('list -> LPAREN items RPAREN','list',3,'p_list','yacc.py',154),
  ('items -> item items','items',2,'p_items','yacc.py',158),
  ('items -> empty','items',1,'p_items_empty','yacc.py',162),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',166),
  ('item -> atom','item',1,'p_item_atom','yacc.py',170),
  ('item -> quoted_list','item',1,'p_item_list','yacc.py',178),
  ('item -> call','item',1,'p_item_call','yacc.py',182),
  ('item -> empty','item',1,'p_item_empty','yacc.py',186),
  ('call -> LPAREN SIMB items RPAREN','call',4,'p_call','yacc.py',190),
  ('let -> LPAREN SIMB LPAREN SIMB NUM RPAREN','let',6,'p_let','yacc.py',195),
  ('atom -> SIMB','atom',1,'p_atom_simbol','yacc.py',201),
  ('atom -> bool','atom',1,'p_atom_bool','yacc.py',205),
  ('atom -> NUM','atom',1,'p_atom_num','yacc.py',209),
  ('atom -> TEXT','atom',1,'p_atom_word','yacc.py',213),
  ('atom -> <empty>','atom',0,'p_atom_empty','yacc.py',217),
  ('bool -> TRUE','bool',1,'p_true','yacc.py',221),
  ('bool -> FALSE','bool',1,'p_false','yacc.py',225),
  ('atom -> NIL','atom',1,'p_nil','yacc.py',229),
]
